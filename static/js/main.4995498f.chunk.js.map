{"version":3,"sources":["component/node.jsx","views/dashboard.jsx","reportWebVitals.js","index.js"],"names":["Node","props","title","this","nodeNumber","status","streetName","className","React","Component","Dashboard","fetchData","timerId","setInterval","clearInterval","nodes","key","map","item","style","color","display","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAGqBA,E,kDACnB,WAAYC,GAAQ,uCACZA,G,0CAER,WACE,IAAIC,EAAO,eAAeC,KAAKF,MAAMG,WAAW,cAAcD,KAAKF,MAAMI,OAAO,mBAAmBF,KAAKF,MAAMK,WAC9G,OACE,qBAAKJ,MAAOA,EAAZ,SACE,yBACEK,UACuB,aAArBJ,KAAKF,MAAMI,OAAwB,YAAc,eAFrD,kBAKQF,KAAKF,MAAMG,oB,GAbOI,IAAMC,WCEnBC,G,8DACnB,WAAYT,GAAQ,uCACZA,G,qDAGR,WAAqB,IAAD,OAClBE,KAAKQ,YACLR,KAAKS,QAAUC,aAAY,kBAAM,EAAKF,cAAa,O,kCAGrD,WACEG,cAAcX,KAAKS,W,uBAGrB,c,oBAEA,WACE,IA8DMG,EA9DO,CACX,CACEC,IAAK,EACLZ,WAAY,KACZC,OAAQ,aAEV,CACEW,IAAK,EACLZ,WAAY,KACZC,OAAQ,aAEV,CACEW,IAAK,EACLZ,WAAY,KACZC,OAAQ,gBAEV,CACEW,IAAK,EACLZ,WAAY,KACZC,OAAQ,aAEV,CACEW,IAAK,EACLZ,WAAY,KACZC,OAAQ,aAEV,CACEW,IAAK,EACLZ,WAAY,KACZC,OAAQ,aAEV,CACEW,IAAK,EACLZ,WAAY,KACZC,OAAQ,gBAEV,CACEW,IAAK,EACLZ,WAAY,KACZC,OAAQ,aAEV,CACEW,IAAK,EACLZ,WAAY,KACZC,OAAQ,aAEV,CACEW,IAAK,GACLZ,WAAY,KACZC,OAAQ,aAEV,CACEW,IAAK,GACLZ,WAAY,KACZC,OAAQ,aAEV,CACEW,IAAK,GACLZ,WAAY,KACZC,OAAQ,cAGOY,KAAI,SAACC,GACtB,OACE,qCACE,cAAC,EAAD,CACEd,WAAYc,EAAKd,WACjBC,OAAQa,EAAKb,QACRa,EAAKF,KAEZ,mBAAGT,UAAYW,EAAKF,IAAM,IAAM,GAAkB,aAAbE,EAAKb,OAAsB,SAAS,YAAac,MAAO,CAACC,MAAM,SAApG,sBAGA,mBAAGb,UAAyB,gBAAbW,EAAKb,OAAyB,SAAS,YAAac,MAAO,CAACC,MAAM,OAAjF,uBAGA,oBAAID,MAAO,CAAEE,QAASH,EAAKF,IAAM,IAAM,EAAI,QAAU,gBAI3D,OAAO,qBAAKM,GAAG,YAAR,SAAqBP,Q,GAjGOP,IAAMC,YCO9Bc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4995498f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../assets/css/node.css\";\r\n\r\nexport default class Node extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    let title= \"NodeNumber: \"+this.props.nodeNumber+\"\\n Status: \"+this.props.status+\"\\n Street Name: \"+this.props.streetName;\r\n    return (\r\n      <div title={title}>\r\n        <button\r\n          className={\r\n            this.props.status == \"connected\" ? \"connected\" : \"disconnected\"\r\n          }\r\n        >\r\n          Node {this.props.nodeNumber}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Node from \"../component/node\";\r\nimport \"../assets/css/dashboard.css\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n    this.timerId = setInterval(() => this.fetchData(), 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerId);\r\n  }\r\n\r\n  fetchData() {}\r\n\r\n  render() {\r\n    const data = [\r\n      {\r\n        key: 1,\r\n        nodeNumber: \"01\",\r\n        status: \"connected\",\r\n      },\r\n      {\r\n        key: 2,\r\n        nodeNumber: \"02\",\r\n        status: \"connected\",\r\n      },\r\n      {\r\n        key: 3,\r\n        nodeNumber: \"03\",\r\n        status: \"disconnected\",\r\n      },\r\n      {\r\n        key: 4,\r\n        nodeNumber: \"04\",\r\n        status: \"connected\",\r\n      },\r\n      {\r\n        key: 5,\r\n        nodeNumber: \"05\",\r\n        status: \"connected\",\r\n      },\r\n      {\r\n        key: 6,\r\n        nodeNumber: \"06\",\r\n        status: \"connected\",\r\n      },\r\n      {\r\n        key: 7,\r\n        nodeNumber: \"07\",\r\n        status: \"disconnected\",\r\n      },\r\n      {\r\n        key: 8,\r\n        nodeNumber: \"08\",\r\n        status: \"connected\",\r\n      },\r\n      {\r\n        key: 9,\r\n        nodeNumber: \"09\",\r\n        status: \"connected\",\r\n      },\r\n      {\r\n        key: 10,\r\n        nodeNumber: \"10\",\r\n        status: \"connected\",\r\n      },\r\n      {\r\n        key: 11,\r\n        nodeNumber: \"11\",\r\n        status: \"connected\",\r\n      },\r\n      {\r\n        key: 12,\r\n        nodeNumber: \"12\",\r\n        status: \"connected\",\r\n      },\r\n    ];\r\n    const nodes = data.map((item) => {\r\n      return (\r\n        <>\r\n          <Node\r\n            nodeNumber={item.nodeNumber}\r\n            status={item.status}\r\n            key={item.key}\r\n          />\r\n          <p className={(item.key % 4 !== 0 && item.status==\"connected\" )?\"dashed\":\"notdashed\"} style={{color:\"green\"}}>\r\n            --------\r\n          </p>\r\n          <p className={(item.status==\"disconnected\" )?\"dashed\":\"notdashed\"} style={{color:\"red\"}}>\r\n            -X-X-X-X-\r\n          </p>\r\n          <br style={{ display: item.key % 4 === 0 ? \"block\" : \"none\" }} />\r\n        </>\r\n      );\r\n    });\r\n    return <div id=\"dashboard\">{nodes}</div>;\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './views/dashboard.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}